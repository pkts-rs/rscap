[package]
name = "rscap"
authors = ["Nathaniel Bennett <me[at]nathanielbennett[dotcom]>"]
description = "Cross-platform packet capture and transmission utilities"
# 1.74 - `from_encoded_bytes_unchecked` stabilized
rust-version = "1.74"
version = "0.3.1"
license = "MIT OR Apache-2.0"
edition = "2021"
repository = "https://github.com/pkts-rs/rscap"
readme = "../README.md"
keywords = ["packets", "capture", "pcap", "npcap", "bpf"]
categories = ["network-programming"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
async-std = ["dep:async-io", "dep:async-std"]
mio = ["dep:mio"]
smol = ["dep:async-io", "dep:smol"]
tokio = ["dep:tokio"]

# Enables use of the npcap driver on Windows systems when the necessary dll libraries are present.
# 
# If `Packet.dll` is not present on the system, this option will gracefully return runtime errors
# for any `npcap` APIs used and revert to `pktmon` for platform-agnostic APIs on Windows.
# Note that this will incur a runtime performance hit, but only at the time of socket creation--the
# socket will load `Packet.dll` as a runtime library when it is constructed and unload the dll when
# the socket is destroyed. This has no performance hit during packet capture or transmission, but
# opening several sockets in this mode will produce a significant memory footprint from the
# repeatedly loaded dlls.
npcap = []
# Requires the `npcap` driver for Windows systems.
#
# Unlike `npcap`, this option will not immediately abort the process if `Packet.dll` cannot be
# loaded on program start. The dll is loaded once on program startup, so socket creation does not
# incur any additional overheads.
npcap-runtime = ["npcap"]

[dependencies]
bitflags = { version = "2.6.0" }
libc = { version = "0.2" }
once_cell = { version = "1.19" }
pkts-common = { version = "0.1.0" }
windows-sys = { version = "0.59", features = ["Win32_Networking_WinSock", "Win32_NetworkManagement_IpHelper", "Win32_System_IO", "Win32_System_Kernel", "Win32_System_LibraryLoader", "Win32_System_Threading"] }

async-io = { version = "2.3.4", optional = true }
async-std = { version = "1.13.0", optional = true }
mio = { version = "0.8.11", features = ["net"], optional = true }
smol = { version = "2.0.2", optional = true }
tokio = { version = "1.38.1", features = ["net", "rt", "time"], optional = true }
